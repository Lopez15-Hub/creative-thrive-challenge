import 'dart:developer';

import 'package:flutter/material.dart';

import 'package:flutter_draggable_gridview/flutter_draggable_gridview.dart';

class ShopView extends StatefulWidget {
  const ShopView({Key? key}) : super(key: key);

  @override
  ShopViewState createState() => ShopViewState();
}

class ShopViewState extends State<ShopView> {
  List<DraggableGridItem> _listOfDraggableGridItem = [];

  @override
  void initState() {
    _generateImageData();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: DraggableGridViewBuilder(
          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            childAspectRatio: MediaQuery.of(context).size.width /
                (MediaQuery.of(context).size.height / 3),
          ),
          children: _listOfDraggableGridItem,
          dragCompletion: onDragAccept,
          isOnlyLongPress: false,
          dragFeedback: feedback,
          dragPlaceHolder: placeHolder,
        ),
      ),
    );
  }

  Widget feedback(List<DraggableGridItem> list, int index) {
    return Container(
      child: list[index].child,
      width: 200,
      height: 150,
    );
  }

  PlaceHolderWidget placeHolder(List<DraggableGridItem> list, int index) {
    return PlaceHolderWidget(
      child: Container(
        color: Colors.white,
      ),
    );
  }

  void onDragAccept(
      List<DraggableGridItem> list, int beforeIndex, int afterIndex) {
    log('onDragAccept: $beforeIndex -> $afterIndex');
  }

  void _generateImageData() {
    _listOfDraggableGridItem.addAll(
      [
        DraggableGridItem(
          child: Container(
            child: Text("hola mundo"),
          ),
          isDraggable: true,
          dragCallback: (context, isDragging) {
            log('isDragging: $isDragging');
          },
        ),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola chad")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
        DraggableGridItem(
            child: Container(child: Text("hola mundo")), isDraggable: true),
      ],
    );
  }
}

class ProductItem extends StatelessWidget {
  const ProductItem({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return  Card(
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(20.0),
        ),
        elevation: 4,
        child: Column(
          children: [
            Image.network("https://picsum.photos/1080/600?image=$index",
                fit: BoxFit.cover),
            Padding(
              padding: const EdgeInsets.only(top: 10.0),
              child: Text(
                'Item $index',
                textAlign: TextAlign.center,
                style: const TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 24,
                ),
              ),
            ),
            const Text(
              'Item Ship',
              textAlign: TextAlign.center,
              style: TextStyle(
                  fontWeight: FontWeight.normal,
                  fontSize: 12,
                  color: Color.fromARGB(255, 166, 166, 166)),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 20, right: 20),
              child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text('\$9.99',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 20,
                        )),
                    IconButton(
                        onPressed: () => print("Add"),
                        icon: const Icon(
                          Icons.favorite_outline,
                          size: 30,
                        ))
                  ]),
            ),
          ],
        ),
      );
  }
}